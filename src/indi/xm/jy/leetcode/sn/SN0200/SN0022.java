package indi.xm.jy.leetcode.sn.SN0200;

import indi.xm.jy.leetcode.util.StringUtils;
import org.junit.Test;

import java.util.*;

/**
 * 括号生成
 */
public class SN0022 {

    List<String> res = new ArrayList<>();

    public List<String> generateParenthesis(int n) {
        dfs(0,0,n,new StringBuilder());
        return res;
    }

    private void dfs(int left, int right, int n, StringBuilder single) {
        if (right == n){
            res.add(single.toString());
            return;
        }
        if (left > right){
            single.append(")");
            dfs(left,right + 1,n,single);
            single.deleteCharAt(single.length() - 1);
        }
        if (left < n){
            single.append("(");
            dfs(left + 1,right,n,single);
            single.deleteCharAt(single.length() - 1);
        }
    }

    @Test
    public void test(){
        System.out.println(generateParenthesis(8).size());
//        StringUtils.replaceChar("[\"((((()))))\",\"(((()())))\",\"(((())()))\",\"(((()))())\",\"(((())))()\",\"((()(())))\",\"((()()()))\",\"((()())())\",\"((()()))()\",\"((())(()))\",\"((())()())\",\"((())())()\",\"((()))(())\",\"((()))()()\",\"(()((())))\",\"(()(()()))\",\"(()(())())\",\"(()(()))()\",\"(()()(()))\",\"(()()()())\",\"(()()())()\",\"(()())(())\",\"(()())()()\",\"(())((()))\",\"(())(()())\",\"(())(())()\",\"(())()(())\",\"(())()()()\",\"()(((())))\",\"()((()()))\",\"()((())())\",\"()((()))()\",\"()(()(()))\",\"()(()()())\",\"()(()())()\",\"()(())(())\",\"()(())()()\",\"()()((()))\",\"()()(()())\",\"()()(())()\",\"()()()(())\",\"()()()()()\"]",
//                new char[]{'[',']'},new char[]{'{','}'});
        System.out.println("{\"((((()))))\",\"(((()())))\",\"(((())()))\",\"(((()))())\",\"(((())))()\",\"((()(())))\",\"((()()()))\",\"((()())())\",\"((()()))()\",\"((())(()))\",\"((())()())\",\"((())())()\",\"((()))(())\",\"((()))()()\",\"(()((())))\",\"(()(()()))\",\"(()(())())\",\"(()(()))()\",\"(()()(()))\",\"(()()()())\",\"(()()())()\",\"(()())(())\",\"(()())()()\",\"(())((()))\",\"(())(()())\",\"(())(())()\",\"(())()(())\",\"(())()()()\",\"()(((())))\",\"()((()()))\",\"()((())())\",\"()((()))()\",\"()(()(()))\",\"()(()()())\",\"()(()())()\",\"()(())(())\",\"()(())()()\",\"()()((()))\",\"()()(()())\",\"()()(())()\",\"()()()(())\",\"()()()()()\"}".split(",").length);
    }


}
