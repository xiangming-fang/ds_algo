双链表：优化某些问题

用数组实现双链表的过程中: e：表示数组节点值。l数组表示节点的左指针，r数组表示右指针。
用数组实现双链表，是不存在头指针和尾指针的，给出的模板，统一以下标为0位置为head，1位置为tail
head、和tail不存元素值，只是用来表示区间包裹

模板：
int N = 100010;
int[] e = new int[N];
int[] l = new int[N];
int[] r = new int[N];
// 当前数组可存储的位置
int idx = 0;

public void init(){
    r[0] = 1;
    l[1] = 0;
    idx = 2;
}

// 移除k位置的元素
public void remove(int k){
    r[l[k]] = r[k];
    l[r[k]] = l[k];
}

// 在k位置元素的右侧增加新元素x（双链表的任何添加都可以转换成这种形式）
// 往一个元素的左边添加新元素可以写成：add(l[k],x)
public void add(int k,int x){
    e[idx] = x;
    r[idx] = r[k];
    l[idx] = k;
    l[r[k]] = idx;
    r[k] = idx;
    idx++;
}





