单链表用的最多的是邻接表：主要用来构造图和树

用数组表示链表关键点，创建两个数组：
（1）e[len] => 表示每个链表节点的值,等于-1表示空节点
（2）ne[len] => 表示每个链表节点指向的下一个节点位置。指向-1的话表示当前节点是末尾节点

eg：
如果给出 e = {3,5,6,8,7,10}、ne = {1,2,3,4,5,-1} 请构造出相应的链表结构。

构造
head -> 3 -> 5 -> 6 - > 8 -> 7 -> 10 -> null
        0    1    2     3    4    5


模板：
// head存储链表头，e[]存储节点的值，ne[]存储节点的next指针，idx表示当前用到了哪个节点
int head, e[N], ne[N], idx;

// 初始化
void init()
{
    head = -1;
    idx = 0;
}

// 在链表头插入一个数a
void insert(int a)
{
    e[idx] = a, ne[idx] = head, head = idx ++ ;
}

// 将头结点删除，需要保证头结点存在
void remove()
{
    head = ne[head];
}

