一维前缀和：

tip：将原数组和前缀和数组从第1个位置开始存储，第0位让其空在那。

元素组a: a[0],a[1],a[2],a[3]……a[n+1]

前缀和数组s: s[0],s[1],s[2],s[3]……s[n+1]

公式一：s[i] = a[0]+……+a[i];

s[0] = 0;
s[1] = s[0] + a[0];
s[2] = s[1] + a[1];
……
公式二：s[i] = s[i-1] + a[i];


例如：[l,r] => s[r] - s[l-1];

二维前缀和：

tip: 将原数组和前缀和数组从i=1,j=1开始存储。

问题1：前缀和s[x][y] 等于多少？
s[x][y] 表示的是从s[1][1]到s[x][y]构成的矩阵元素总和。

s[x][y] = s[x-1][y] + s[x][y-1] - s[x-1][y-1] + a[x][y]

问题2：给定原数组的两个的两个位置a[x1][x2] 到 a[x2][y2],求这两个位置构成的矩阵元素总和是多少

// 牢记：x2和y2不需要减，操作的都是x1或者y1
二维数组区间值 = s[x2][y2] - s[x2][y1-1] - s[x1-1][y2] + s[x1-1][y1-1]

前缀和作用：快速求出元素组a在一个区间内的和；













